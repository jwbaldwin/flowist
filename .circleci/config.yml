# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1
jobs:
  test-build:
    docker:
      - image: circleci/openjdk:8-jdk-node
    steps:
      - checkout
      - run:
          name: Generate Cache Checksum
          command: find . -name 'build.gradle' | sort | xargs cat | shasum | awk '{print
            $1}' > /tmp/gradle_cache_seed
      - restore_cache:
          key: gradle-{{ checksum "/tmp/gradle_cache_seed" }}-{{ checksum ".circleci/config.yml"
            }}
      - run:
          name: Run Tests
          command: ./gradlew clean test build
      - save_cache:
          paths:
            - ~/.gradle/caches
            - ~/.gradle/wrapper
          key: gradle-{{ checksum "/tmp/gradle_cache_seed" }}-{{ checksum ".circleci/config.yml"
            }}
      - store_test_results:
          path: build/test-results/test/
      - store_artifacts:
          path: build/test-results/test/
          destination: Results
      - store_artifacts:
          path: build/reports/tests/test/
          destination: Reports
      # Persist the specified paths (workspace/echo-output) into the workspace for use in downstream job.
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
          # taken to be the root directory of the workspace.
          root: .
          # Must be relative path from root
          paths:
            - build/libs/
    environment:
      - TERM: dumb
  docker-publish:
    docker:
      - image: circleci/python:3.6
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: .
      - setup_remote_docker
      - run:
          name: Check Environment Variables
          command: |
            if [[ -z "${DOCKER_LOGIN}" ]]; then
            echo "DOCKER_LOGIN is not set, will not be able to push image."
            exit 1
            fi

            if [[ -z "${DOCKER_PASSWORD}" ]]; then
            echo "DOCKER_PASSWORD is not set, will not be able to push image."
            exit 1
            fi
      - run:
          name: Docker Login
          command: docker login -u "${DOCKER_LOGIN}" -p "${DOCKER_PASSWORD}" docker.io
      - run:
          name: Build Docker Image
          command: |
            docker build \
               \
              -f Dockerfile -t \
              docker.io/$DOCKER_LOGIN/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1 \
              .
      - run:
          name: Push Docker Image
          command: |
            if [[ $CIRCLE_NODE_INDEX == 0 ]]; then
              docker push docker.io/$DOCKER_LOGIN/$CIRCLE_PROJECT_REPONAME
            fi
workflows:
  build-test-deploy:
    jobs:
      - test-build
      - docker-publish:
          requires:
            - test-build